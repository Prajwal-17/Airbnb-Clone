generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  name          String
  email         String    @unique
  password      String?
  emailVerified DateTime?
  image         String?
  accounts      Account[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  listings    Listing[]
  favorites   String[]      @db.ObjectId
  reservation Reservation[]
}

model Account {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  userId            String  @db.ObjectId
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.String
  access_token      String? @db.String
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.String
  session_state     String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Listing {
  id            String @id @default(auto()) @map("_id") @db.ObjectId
  userId        String @db.ObjectId
  user          User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  category      String
  country       String
  location      Int[]
  guestCount    Int
  roomCount     Int
  bathroomCount Int
  imageUrl      String
  title         String
  description   String
  price         Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  reservation Reservation[]
}

model Reservation {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  startDate DateTime
  endDate   DateTime
  total     Int

  Listing   Listing? @relation(fields: [listingId], references: [id], onDelete: Cascade)
  listingId String?  @db.ObjectId

  User   User?   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String? @db.ObjectId

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
